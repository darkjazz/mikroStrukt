{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset238 Inconsolata;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 (\
	fbgverb: (\
		def: \cf3 SynthDef\cf2 (\cf4 \\fbgverb\cf2 , \{\cf3 |out, in, gate = 1.0, i_wrp, frq, wsz, dns, rnd, amp, \
				xang, yang, zang|\cf2 \
			\cf3 var\cf2  bufs, recs, ptrs, phases, deltimes, output, trigs, input, w, x, y, z;\
			deltimes = [0, 1 / i_wrp * 0.5, 1 / i_wrp];\
			bufs = \cf3 Array\cf2 .fill(3, \{ \cf3 LocalBuf\cf2 (\cf3 SampleRate\cf2 .ir * 2) \});\
			ptrs = \cf3 Array\cf2 .fill(3, \{\cf3 |i|\cf2  \cf3 LFSaw\cf2 .kr(i_wrp, 0, 0.5, 0.5) \});\
			trigs = \cf3 Array\cf2 .fill(3, \{\cf3 |i|\cf2  \cf3 DelayN\cf2 .kr(\cf3 Impulse\cf2 .kr(i_wrp * (2 / 3)), \
				deltimes@i, deltimes@i) \});\
			input = \cf3 In\cf2 .ar(in);\
			recs = \cf3 Mix\cf2 .fill(3, \{\cf3 |i|\cf2 \
				\cf3 RecordBuf\cf2 .ar(input, bufs@i, loop:0.0, trigger: trigs@i);\
			\});\
			output = \cf3 Mix\cf2 .fill(3, \{\cf3 |i|\cf2 \
				\cf3 Warp1\cf2 .ar(1, bufs@i, ptrs@i, frq, wsz, -1, dns, rnd)\
					* \cf3 EnvGen\cf2 .kr(\
						\cf3 Env\cf2 ([0.0,1.0,1.0,0.0],[0.3,0.4,0.3],\cf4 \\sine\cf2 , 0, 3),\
						trigs.rotate(-1)@i, timeScale: 1.0 / i_wrp\
					)\
			\}) * \cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 ([0.001, 1.0, 1.0, 0.001], [0.3, 0.4, 0.3], \cf4 \\sine\cf2 , 2, 1), \
				gate, doneAction: 2);\
			#w, x, y, z = \cf3 A2B\cf2 .ar(\
					output,\
					\cf3 DelayN\cf2 .ar(output, 0.01, 0.01),\
					\cf3 DelayN\cf2 .ar(output, 0.02, 0.02),\
					\cf3 DelayN\cf2 .ar(output, 0.03, 0.03)\
			) * amp;\
			\cf3 Out\cf2 .ar(out, \cf3 AtkRotateXYZ\cf2 .ar(w, x, y, z, xang, yang, zang))\
		\}),\
		specs: (\
			i_wrp: \cf3 ControlSpec\cf2 (0.005, 0.5),\
			frq: \cf3 ControlSpec\cf2 (0.25, 2.0, step: 1/4),\
			wsz: \cf3 ControlSpec\cf2 (0.01, 0.2),\
			dns: \cf3 ControlSpec\cf2 (1, 10),\
			rnd: \cf3 ControlSpec\cf2 (0, 0.01),\
			amp: \cf3 ControlSpec\cf2 (0.3, 1.0),\
			xang: \cf3 ControlSpec\cf2 (-pi, pi),\
			yang: \cf3 ControlSpec\cf2 (-pi, pi),\
			zang: \cf3 ControlSpec\cf2 (-pi, pi)\
		)\
	),\
	\
	latch: (\
		def: \cf3 SynthDef\cf2 (\cf4 \\latch\cf2 , \{\cf3 |out, in, th, eb1, eb2, rt, damp=0.5, bw=0.5, sp, dry, early, tail, 				gate=1, amp, xang, yang, zang|\cf2 \
			\
			\cf3 var\cf2  input, freq, trig, fft, gtrig, rL, rR, w, x, y, z, env, sig, pitch, a, b, c, d;\
			env = \cf3 Control\cf2 .names([\cf4 \\env\cf2 ]).kr(\cf3 Env\cf2 .newClear(8).asArray);\
			input = \cf3 In\cf2 .ar(in);\
			pitch = \cf3 Pitch\cf2 .kr(input)[0];\
			fft = \cf3 FFT\cf2 (\cf3 LocalBuf\cf2 (512), input);\
			trig = \cf3 Onsets\cf2 .kr(fft, th);\
			freq = \cf3 Latch\cf2 .ar(pitch, trig);\
			gtrig = \cf3 Dust\cf2 .kr(\cf3 SinOsc\cf2 .kr(\cf3 LFNoise2\cf2 .kr(0.5)).range(8, 64));\
			sig = \cf3 SinGrain\cf2 .ar(\
				gtrig, \
				\cf3 Lag\cf2 .kr(\cf3 Amplitude\cf2 .kr(input), 0.1).linlin(0.0, 1.0, 0.001, 0.01), \
				\cf3 Select\cf2 .kr(\cf3 TIRand\cf2 .kr(0, 6, gtrig), \
					freq * \cf3 Array\cf2 .geom(7, 0.125, 2**(1/7) ) * (1..7)), \
				\cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 ([0.001, 1.0], [1], \cf4 \\sine\cf2 ), trig, timeScale: \cf3 TRand\cf2 .kr(0.3, 3.0, trig))\
			);\
			#rL, rR = \cf3 GVerb\cf2 .ar(sig + \cf3 Dust2\cf2 .ar(pitch), 500, rt, damp, bw, sp, dry, early, tail, 500)\
				* \cf3 EnvGen\cf2 .kr(env, gate, doneAction: 2);\
			a = \cf3 BLowShelf\cf2 .ar(rL, 100, 0.5, 0.5);\
			b = \cf3 BPeakEQ\cf2 .ar(rR, 800, 5.0, -16);\
			c = \cf3 BHiShelf\cf2 .ar(rL, 10000, 1.0, 1.0);\
			d = \cf3 BPeakEQ\cf2 .ar(rR, 3000, 3.0, -8);\
			#w, x, y, z = \cf3 A2B\cf2 .ar(a, b, c, d);\
			\cf3 Out\cf2 .ar(out, \cf3 AtkRotateXYZ\cf2 .ar(w, x, y, z, xang, yang, zang))\
		\}).add,\
		specs: (\
			th: \cf3 ControlSpec\cf2 (-40.dbamp, -20.dbamp),\
			rt: \cf3 ControlSpec\cf2 (0.5, 5),\
			sp: \cf3 ControlSpec\cf2 (5, 20),\
			dry: \cf3 ControlSpec\cf2 (0.0, 0.01),\
			early: \cf3 ControlSpec\cf2 (0.01, 0.0),\
			tail: \cf3 ControlSpec\cf2 (0.3, 0.6),\
			amp: \cf3 ControlSpec\cf2 (0.3, 0.6),\
			xang: \cf3 ControlSpec\cf2 (-pi, pi),\
			yang: \cf3 ControlSpec\cf2 (-pi, pi),\
			zang: \cf3 ControlSpec\cf2 (-pi, pi)\
		)\
	),\
	\
	cliq: (\
		def: \cf3 SynthDef\cf2 (\cf4 \\cliq\cf2 , \{\cf3 |out, in, th, gate=1, amp, sdur, pth, cdur=0.001, quant=0.107|\cf2 \
	\
			\cf3 var\cf2   w, x, y, z, input, freq, trig, fft, gtrig, bfr, env, sig, pch, snd, senv, a, b, c, d;\
			\cf3 var\cf2  ampctr;\
			env = \cf3 EnvControl\cf2 .kr;\
			input = \cf3 In\cf2 .ar(in);\
			ampctr = \cf3 Lag2\cf2 .kr(\cf3 Amplitude\cf2 .kr(input), 0.1);\
			pch = \cf3 Pitch\cf2 .kr(input)[0];\
			fft = \cf3 FFT\cf2 (\cf3 LocalBuf\cf2 (512), input);\
			trig = \cf3 Trig\cf2 .ar(\cf3 Onsets\cf2 .kr(fft, th), quant);\
			gtrig = \cf3 Trig\cf2 .ar(trig, quant*8);\
			senv = \cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 ([0.001, 1.0, 1.0, 0.001], [0.01, sdur, 0.1], \cf4 \\exp\cf2 ), gtrig);\
			sig = \cf3 Mix\cf2 (\
				\cf3 BPF\cf2 .ar(\
					\cf3 LFSaw\cf2 .ar(pch, 0, \cf3 Decay\cf2 .ar(trig, cdur * \cf3 LFNoise1\cf2 .ar(4).abs)),\
					\cf3 TRand\cf2 .kr(pi**5, (pi**5)*(2**(89/17)), trig).round(2**(1/17)),\'a0\
					0.2,\'a0\
					25 * \cf3 LFNoise1\cf2 .ar(8).range(0, 1)\'a0\
				).fold(-1, 1)) * ampctr.linlin(0, 1, 0.1, 0.6);\
			sig = \cf3 Mix\cf2 (sig + \cf3 GVerb\cf2 .ar(sig, 100, 20, 0.9, 0.9, 5, 0, 0, 0.05));\
			snd = \cf3 Reverb\cf2 .ar(\cf3 Select\cf2 .ar(pch > pth, \
				[\cf3 Mix\cf2 (\cf3 SinOsc\cf2 .ar(\cf3 Array\cf2 .geom(7, \cf3 Rand\cf2 (40.0, 50.0), 2**(1/5)), 0, \
					\cf3 Array\cf2 .geom(7, 1.0, 15/16), 0.5pi).tanh) * 0.3, \
					\cf3 SinOsc\cf2 .ar(pch * 100, 0.5pi, \cf3 Amplitude\cf2 .kr(input))\
			]), 1).fold(-1, 1) * senv;\
			sig = \cf3 Mix\cf2 (sig + snd) * \cf3 EnvGen\cf2 .kr(env, gate, doneAction: 2);\
			#a, b, c, d = [\
				\cf3 BLowShelf\cf2 .ar(sig, 100, 0.5, 0.5),\
			 	\cf3 BPeakEQ\cf2 .ar(sig, 800, 5.0, -8),\
				\cf3 BHiShelf\cf2 .ar(sig, 10000, 1.0, 1.0),\
				\cf3 BPeakEQ\cf2 .ar(sig, 3000, 3.0, -4)\
			];\
			#w, x, y, z = \cf3 A2B\cf2 .ar(a, b, c, d);\
		 	\cf3 Out\cf2 .ar(out, \cf3 AtkRotateXYZ\cf2 .ar(w, x, y, z, \
				\cf3 TRand\cf2 .kr(-pi, pi, trig), \cf3 TRand\cf2 .kr(-pi, pi, trig), \cf3 TRand\cf2 .kr(-pi, pi, trig) ))\
		\}),\
		\
		specs: (\
			th: \cf3 ControlSpec\cf2 (-30.dbamp, -10.dbamp),\
			amp: \cf3 ControlSpec\cf2 (0.2, 0.8),\
			sdur: \cf3 ControlSpec\cf2 (0.01, 0.3),\
			cdur: \cf3 ControlSpec\cf2 (0.001, 0.007),\
			pth: \cf3 ControlSpec\cf2 (400.0, 1000.0)\
		)\
	),\
	\
	grains: (\
		def: \cf3 SynthDef\cf2 (\cf4 \\grains\cf2 , \{\cf3 |out, in, gate=1, maxdel=0.1, xang, yang, zang, bfrq|\cf2 \
			\cf3 var\cf2  a, b, c, d, env, trig, dns, frq, dur, amz, w, x, y, z, input, rnd, ebf;\
			env = \cf3 EnvControl\cf2 .kr;\
			dns = \cf3 ArrayControl\cf2 .kr(\cf4 \\dns\cf2 , 4, 1);\
			dur = \cf3 ArrayControl\cf2 .kr(\cf4 \\dur\cf2 , 4, 1);\
			rnd = \cf3 ArrayControl\cf2 .kr(\cf4 \\rnd\cf2 , 4, 1);\
			frq = \cf3 ArrayControl\cf2 .kr(\cf4 \\frq\cf2 , 4, 1);\
			amz = \cf3 ArrayControl\cf2 .kr(\cf4 \\amz\cf2 , 4, 1);\
			input = \cf3 CombL\cf2 .ar(\cf3 In\cf2 .ar(in), frq, frq, 4) * \cf3 EnvGen\cf2 .kr(env, gate, doneAction: 2);\
			trig = \cf3 DelayL\cf2 .kr(\cf3 Impulse\cf2 .kr(dns), maxdel, \cf3 TRand\cf2 .kr(0, rnd, \cf3 Impulse\cf2 .kr(dns*2)));\
			#a, b, c, d = \cf3 InGrain\cf2 .ar(trig, dur, \
				(\cf3 PitchShift\cf2 .ar(input, pitchRatio: frq\
					add: \cf3 LPF\cf2 .ar(\cf3 LFSaw\cf2 .ar(bfrq*frq), \cf3 LFSaw\cf2 .ar((1..4)).exprange(40, 4000)) \
				)*10).tanh, \
				amz);\
			#w, x, y, z = \cf3 A2B\cf2 .ar(a, b, c, d);\
			\cf3 Out\cf2 .ar(out, \cf3 AtkRotateXYZ\cf2 .ar(w, x, y, z, xang, yang, zang))\
		\}),\
		\
		specs: (\
			bfrq: \cf3 ControlSpec\cf2 (0.125, 1, step: 0.125),\
			xang: \cf3 ControlSpec\cf2 (-pi, pi),\
			yang: \cf3 ControlSpec\cf2 (-pi, pi),\
			zang: \cf3 ControlSpec\cf2 (-pi, pi)\
		),\
		\
		array: (\
			dns: \cf3 Array\cf2 .geom(4, 10, 1.618),\
			dur: \cf3 Array\cf2 .geom(4, 0.005, 1.618),\
			rnd: \cf3 Array\cf2 .geom(4, 0.01, 1.03),\
			frq: \cf3 Array\cf2 .series(4, 0.107, 0.107),\
			amz: \cf3 Array\cf2 .geom(4, 0.4, 1.3)\
		)\
	),\
	\
	streamverb: (\
		def: \cf3 SynthDef\cf2 (\cf4 \\streamverb\cf2 , \{\cf3 |out, in, rmsize=300, rtime, hfd, inbw, spread, dry, early, tail, 				max=300, amp, gate=1.0, slope=0.8, xang, yang, zang|\cf2 \
			\cf3 var\cf2  sig, gverb, ps, ampctr, pu, output, env, a, b, c, d, w, x, y, z;\
			sig = \cf3 In\cf2 .ar(in);\
			ampctr = \cf3 Lag\cf2 .kr(\cf3 Amplitude\cf2 .kr(sig), 0.25);\
			env = \cf3 EnvGen\cf2 .kr(\cf3 EnvControl\cf2 .kr, gate, doneAction: 2);\
			gverb = \cf3 GVerb\cf2 .ar(sig, rmsize, rtime, hfd, inbw, spread, dry, early, tail, max) * env;\
			ps = \cf3 PitchShift\cf2 .ar(gverb, \cf3 LFNoise2\cf2 .kr(0.27, 0.19, 0.2), 1.66, ampctr * amp, ampctr * amp);\
			pu = \cf3 DelayC\cf2 .ar(\
				\cf3 PitchShift\cf2 .ar(gverb, \cf3 LFNoise2\cf2 .kr(0.31, 0.19, 0.2), 0.33, ampctr * amp, ampctr * amp),\
				0.05, 0.05);\
			sig = \cf3 Compander\cf2 .ar(ps ++ pu, ps ++ pu, 0.95, slope, 0.1, 0.04, 0.1);\
			#a, b, c, d = \cf3 LeakDC\cf2 .ar(sig);\
			#w, x, y, z = \cf3 A2B\cf2 .ar(a, b, c, d);\
			\cf3 Out\cf2 .ar(out, \cf3 AtkRotateXYZ\cf2 .ar(w, x, y, z, xang, yang, zang))\
		\}),\
		\
		specs: (\
			rtime: \cf3 ControlSpec\cf2 (5, 30),\
			hfd: \cf3 ControlSpec\cf2 (0.2, 0.8),\
			inbw: \cf3 ControlSpec\cf2 (0.8, 0.2),\
			spread: \cf3 ControlSpec\cf2 (4, 16),\
			dry: \cf3 ControlSpec\cf2 (0.3, 0.05),\
			early: \cf3 ControlSpec\cf2 (0.5, 0.1),\
			tail: \cf3 ControlSpec\cf2 (0.4, 0.8),\
			amp: \cf3 ControlSpec\cf2 (0.5, 1.0),\
			xang: \cf3 ControlSpec\cf2 (-pi, pi),\
			yang: \cf3 ControlSpec\cf2 (-pi, pi),\
			zang: \cf3 ControlSpec\cf2 (-pi, pi)			\
		)\
	)	\
);\
}